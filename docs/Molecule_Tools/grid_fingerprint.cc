# grid_fingerprint

## Background

The idea behind `grid_fingerprint` is that we can measure the
similarity of spatially aligned 3D ligands by measuring their proximity
to the points in a fixed grid. The output is a `gfp` file of fingerprints.

See also [grid_proximity](grid_proximity.md) which implements similar
ideas from a different perspective and with different assumptions.

## Implementation
The grid is specified as a molecule. Typically this might be something
generated by a tool like [molecular_grid](molecular_grid.md). Such a molecule
might be a .sdf file consisting of all Calcium atoms, uniformly distributed
across the spatial range of a set of ligands, although `grid_fingerprint` does
not make any assumptions about the shape of the grid.

The usage message is
```
Generates atom pair fingerprints between ligand atoms and grid atoms
 -T <dist>     produce a bit for each atom pair within radius <dist>. Can be multiple -T options
 -P ...        atom type specification for ligand
 -F <tag>      tag to create
 -w            write 3D smiles (contains coordinates)
 -s <smarts>   only fingerprint atoms matching <smarts>
 -x <nbonds>   used in conjunction with the -s option, extend <nbonds> from matched atoms
 -w <n>        increase importance (count) of matched atoms relative to unmatched atoms (n > 1)
 -z            ignore molecules not matching queries
 -l            reduce to largest fragment
 -i <type>     input specification
 -g ...        chemical standardisation options
 -E ...        standard element specifications
 -A ...        standard aromaticity specifications
 -v            verbose output
```

Both the grid file and one or more ligand files are specified on the command
line. A better design would be to have a -G option for specifying the grid file and
then have just ligand files on the command line. Again ligands must be spatially 
aligned.

